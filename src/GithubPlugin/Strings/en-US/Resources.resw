<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Extension_Name.GitHub" xml:space="preserve">
    <value>GitHub</value>
    <comment>Shown in various places, is GitHub even localized as a product name?</comment>
  </data>
  <data name="Widget_Template.Author" xml:space="preserve">
    <value>Author</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.By" xml:space="preserve">
    <value>by</value>
    <comment>Shown in Widget, part of a string:  # opened {date} by {user}</comment>
  </data>
  <data name="Widget_Template.Issues" xml:space="preserve">
    <value>Issues</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Label" xml:space="preserve">
    <value>Label</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Milestone" xml:space="preserve">
    <value>Milestone</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Opened" xml:space="preserve">
    <value>opened</value>
    <comment>Shown in Widget, part of a string:  # opened {date} by {user}</comment>
  </data>
  <data name="Widget_Template.Project" xml:space="preserve">
    <value>Project</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.PullRequests" xml:space="preserve">
    <value>Pull requests</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Pulls" xml:space="preserve">
    <value>PR</value>
    <comment>Shown in Widget, Abbreviation of "Pull Request" and part of a prefix:  PR / {repositoryName}</comment>
  </data>
  <data name="Widget_Template.Repository" xml:space="preserve">
    <value>Repository</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template_Button.SignIn" xml:space="preserve">
    <value>Sign in</value>
    <comment>Shown in Widget, Button text</comment>
  </data>
  <data name="Widget_Template_Button.Submit" xml:space="preserve">
    <value>Submit</value>
    <comment>Shown in Widget, Button text</comment>
  </data>
  <data name="Widget_Template_Input.UrlPlaceholder" xml:space="preserve">
    <value>github.com/owner/repository</value>
    <comment>Shown in Widget, this is default placeholder hint text for a textbox that is a URL</comment>
  </data>
  <data name="Widget_Template_Label.Url" xml:space="preserve">
    <value>URL</value>
    <comment>Shown in Widget, Label Text</comment>
  </data>
  <data name="Widget_Template_Tooltip.OpenIssue" xml:space="preserve">
    <value>Open issue</value>
    <comment>Shown in Widget, Tooltip text</comment>
  </data>
  <data name="Widget_Template_Tooltip.OpenPullRequest" xml:space="preserve">
    <value>Open pull request</value>
    <comment>Shown in Widget, Tooltip text</comment>
  </data>
  <data name="Widget_Template_Tooltip.SignIn" xml:space="preserve">
    <value>Click here to sign in on GitHub</value>
    <comment>Shown in Widget, Button tooltip</comment>
  </data>
  <data name="Widget_Template_Tooltip.Submit" xml:space="preserve">
    <value>Submit</value>
    <comment>Shown in Widget, Tooltip text</comment>
  </data>
  <data name="Notifications_Toast_Button.Dismiss" xml:space="preserve">
    <value>Dismiss</value>
    <comment>Shown in toast notification.</comment>
  </data>
  <data name="Notifications_Toast_CheckRunFailed.Title" xml:space="preserve">
    <value>Failed checks</value>
    <comment>Shown in toast notification.</comment>
  </data>
  <data name="Notifications_Toast_CheckRunSucceeded.Title" xml:space="preserve">
    <value>Succeeded checks</value>
    <comment>Shown in toast notification.</comment>
  </data>
  <data name="LoginUI_LoginFailedPage_text1" xml:space="preserve">
    <value>Something went wrong :(</value>
  </data>
  <data name="LoginUI_LoginFailedPage_text2" xml:space="preserve">
    <value>Please consider filing feedback</value>
  </data>
  <data name="LoginUI_LoginPage_Button1Text" xml:space="preserve">
    <value>Sign in to github.com</value>
  </data>
  <data name="LoginUI_LoginPage_Button1ToolTip" xml:space="preserve">
    <value>Opens the browser to log you into GitHub</value>
  </data>
  <data name="LoginUI_LoginPage_Button2Flyout_Button" xml:space="preserve">
    <value>Go</value>
  </data>
  <data name="LoginUI_LoginPage_Button2Flyout_Text_ErrorMessage" xml:space="preserve">
    <value>Please enter a valid GitHub enterprise server URL</value>
  </data>
  <data name="LoginUI_LoginPage_Button2Flyout_Text_Label" xml:space="preserve">
    <value>Server URL</value>
  </data>
  <data name="LoginUI_LoginPage_Button2Flyout_Text_PlaceHolder" xml:space="preserve">
    <value>&lt;Enter the GitHub Server link&gt;</value>
  </data>
  <data name="LoginUI_LoginPage_Button2Text" xml:space="preserve">
    <value>Sign in to GitHub Enterprise (Coming Soon!)</value>
  </data>
  <data name="LoginUI_LoginPage_Button2ToolTip" xml:space="preserve">
    <value>Coming soon!</value>
  </data>
  <data name="LoginUI_LoginPage_Heading" xml:space="preserve">
    <value>GitHub</value>
  </data>
  <data name="LoginUI_LoginPage_Subheading" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="LoginUI_LoginSuccededPage_text" xml:space="preserve">
    <value>has logged in successfully! You may close this window.</value>
  </data>
  <data name="LoginUI_WaitingPage_Text" xml:space="preserve">
    <value>Waiting for browser...</value>
  </data>
  <data name="Widget_Template.SignInRequired" xml:space="preserve">
    <value>You must sign in to view this widget's content.</value>
    <comment>Shown in Widget when user is not logged in.</comment>
  </data>
  <data name="Widget_Template.Loading" xml:space="preserve">
    <value>Loading...</value>
    <comment>Shown in Loading Widget, Message text</comment>
  </data>
  <data name="AppDisplayNameDev" xml:space="preserve">
    <value>Dev Home GitHub Extension (Dev)</value>
    <comment>The name of our application when built for dev ring</comment>
  </data>
  <data name="AppDisplayNameCanary" xml:space="preserve">
    <value>Dev Home GitHub Extension (Canary)</value>
    <comment>The name of our application when built for canary ring</comment>
  </data>
  <data name="AppDisplayNameStable" xml:space="preserve">
    <value>Dev Home GitHub Extension (Preview)</value>
    <comment>The name of our application when built for stable ring</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Dev Home GitHub Extension</value>
    <comment>The name of our application</comment>
  </data>
  <data name="Widget_Template.ContentLoading" xml:space="preserve">
    <value>Loading...</value>
    <comment>Shown in Widget, when loading content (issues or PRs)</comment>
  </data>
  <data name="Widget_Template.EmptyIssues" xml:space="preserve">
    <value>There are no issues in this repository.</value>
    <comment>Shown in Widget, when there are no issues</comment>
  </data>
  <data name="Widget_Template.EmptyPulls" xml:space="preserve">
    <value>There are no pull requests in this repository.</value>
    <comment>Shown in Widget, when there are no pull requests</comment>
  </data>
  <data name="Widget_Template.AssignedTitle" xml:space="preserve">
    <value>Assigned to me</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/Mentioned_user" xml:space="preserve">
    <value>Mentioned me</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Assigned" xml:space="preserve">
    <value>assigned</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.AssignedTo" xml:space="preserve">
    <value>Assigned to</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.Open" xml:space="preserve">
    <value>open</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/Mentioned" xml:space="preserve">
    <value>Mentioned</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/MentionedLow" xml:space="preserve">
    <value>mentioned</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/SelectInfoText" xml:space="preserve">
    <value>Select what items appear in this widget</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.IssuesAndPullRequests" xml:space="preserve">
    <value>Issues &amp; pull requests </value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template.ShowInWidget" xml:space="preserve">
    <value>Show in widget</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/PR_Issue_description" xml:space="preserve">
    <value>Items in widget will appear in chronological order from when the pull request or issue was last updated</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_DayAgo" xml:space="preserve">
    <value>day ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_DaysAgo" xml:space="preserve">
    <value>days ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_HourAgo" xml:space="preserve">
    <value>hour ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_HourssAgo" xml:space="preserve">
    <value>hours ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_MinuteAgo" xml:space="preserve">
    <value>minute ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_MinutesAgo" xml:space="preserve">
    <value>minutes ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_Now" xml:space="preserve">
    <value>now</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_SecondAgo" xml:space="preserve">
    <value>second ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="WidgetTemplate_SecondsAgo" xml:space="preserve">
    <value>seconds ago</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/ReviewRequestedFrom" xml:space="preserve">
    <value>Review requested from</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/PR_description" xml:space="preserve">
    <value>Items in widget will appear in chronological order from when the pull request was last updated</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/PR_info" xml:space="preserve">
    <value>Display pull requests where my review has been requested</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/ReviewRequestedTitle" xml:space="preserve">
    <value>Review requested</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="LoginUI_WaitingPageBrowserLaunch_Text" xml:space="preserve">
    <value>Note: Browser may have launched in the background.</value>
  </data>
  <data name="WidgetTemplate_UnknownTime" xml:space="preserve">
    <value>not known</value>
    <comment>Shown in Widget</comment>
  </data>
  <data name="Widget_Template/Updated" xml:space="preserve">
    <value>updated</value>
    <comment>Shown in widget</comment>
  </data>
</root>